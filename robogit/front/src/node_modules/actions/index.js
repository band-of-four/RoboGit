import {
    FETCH_INFORMATIONS_START,
    FETCH_INFORMATIONS_SUCCESS,
    FETCH_INFORMATIONS_FAILURE,
    LOAD_MORE_INFORMATIONS_START,
    LOAD_MORE_INFORMATIONS_SUCCESS,
    LOAD_MORE_INFORMATIONS_FAILURE,
    FETCH_INFORMATION_BY_ID_START,
    FETCH_INFORMATION_BY_ID_SUCCESS,
    FETCH_INFORMATION_BY_ID_FAILURE,
    ADD_INFORMATION_TO_BASKET,
    SEARCH_INFORMATION,
    FETCH_CATEGORIES_START,
    FETCH_CATEGORIES_SUCCESS,
    FETCH_CATEGORIES_FAILURE,
    REMOVE_INFORMATION_FROM_BASKET,
    CLEAN_BASKET,
    FETCH_BASKET_START,
    FETCH_BASKET_SUCCESS,
    FETCH_BASKET_FAILURE,
    BASKET_TO_ORDER_FAILURE,
    BASKET_TO_ORDER,
    FILTER_INFORMATIONS_SUCCESS,
    FILTER_INFORMATIONS_FAILURE,
    CLEAR_FILTER
} from 'actionTypes'
import {getRenderedInformationsLength} from 'selectors'
import {
    basketToOrder as basketToOrderApi,
    filterInformations as filterInformationsApi,
    fetchInformations as fetchInformationsApi,
    loadMoreInformations as loadMoreInformationsApi,
    fetchInformationById as fetchInformationByIdApi,
    fetchCategories as fetchCategoriesApi,
    fetchBasket as fetchBasketApi
} from 'api'
import $ from 'jquery'

export const fetchBasket = () => async dispatch => {
    dispatch({type: FETCH_BASKET_START});

    try {
        const basket = await fetchBasketApi();
        dispatch({
            type: FETCH_BASKET_SUCCESS,
            payload: basket
        })
    } catch (err) {
        dispatch({
            type: FETCH_BASKET_FAILURE,
            payload: err,
            error: true
        })
    }
};

export const fetchInformations = () => async dispatch => {
    dispatch({type: FETCH_INFORMATIONS_START});

    try {
        const informations = await fetchInformationsApi();
        dispatch({
            type: FETCH_INFORMATIONS_SUCCESS,
            payload: informations
        })
    } catch (err) {
        dispatch({
            type: FETCH_INFORMATIONS_FAILURE,
            payload: err,
            error: true
        })
    }
};

export const loadMoreInformations = () => async (dispatch, getState) => {
    const offset = getRenderedInformationsLength(getState());

    dispatch({type: LOAD_MORE_INFORMATIONS_START});

    try {
        const informations = await loadMoreInformationsApi({offset});
        dispatch({
            type: LOAD_MORE_INFORMATIONS_SUCCESS,
            payload: informations
        })
    } catch (err) {
        dispatch({
            type: LOAD_MORE_INFORMATIONS_FAILURE,
            payload: err,
            error: true
        })
    }
};

export const fetchInformationById = (id) => async dispatch => {
    dispatch({type: FETCH_INFORMATION_BY_ID_START});

    try {
        const information = await fetchInformationByIdApi(id);
        dispatch({
            type: FETCH_INFORMATION_BY_ID_SUCCESS,
            payload: information
        })
    } catch (err) {
        dispatch({
            type: FETCH_INFORMATION_BY_ID_FAILURE,
            payload: err,
            error: true
        })
    }
};

export const addInformationToBasket = id => dispatch => {
    dispatch({
        type: ADD_INFORMATION_TO_BASKET,
        payload: id
    })
};

export const searchInformation = (text) => dispatch => {
    dispatch({
        type: SEARCH_INFORMATION,
        payload: text
    })
};

export const clearFilter = () => dispatch => {
    dispatch({
        type: CLEAR_FILTER
    })
};

export const filterInformations = (filters) => async dispatch => {
    console.log("FILTER INFORMATIONS");
    console.dir(filters);
    try {
        const ids = await filterInformationsApi(filters);
        dispatch({
            type: FILTER_INFORMATIONS_SUCCESS,
            payload: ids
        })
    } catch (err) {
        dispatch({
            type: FILTER_INFORMATIONS_FAILURE,
            payload: err,
            error: true
        })
    }
};

export const fetchCategories = () => async dispatch => {
    dispatch({type: FETCH_CATEGORIES_START});

    try {
        const informations = await fetchCategoriesApi();
        dispatch({
            type: FETCH_CATEGORIES_SUCCESS,
            payload: informations
        })
    } catch (err) {
        dispatch({
            type: FETCH_CATEGORIES_FAILURE,
            payload: err,
            error: true
        })
    }
};

export const removeInformationFromBasket = id => async dispatch => {
    dispatch({
        type: REMOVE_INFORMATION_FROM_BASKET,
        payload: id
    })
};

export const cleanBasket = () => dispatch => {
    dispatch({
        type: CLEAN_BASKET
    })
};

export const basketToOrder = () => async dispatch => {
    try {
        const orderId =  await basketToOrderApi();
        dispatch({
            type: BASKET_TO_ORDER,
            payload: orderId
        })
    } catch (err) {
        dispatch({
            type: BASKET_TO_ORDER_FAILURE,
            error: true,
            payload: err
        })
    }
};
