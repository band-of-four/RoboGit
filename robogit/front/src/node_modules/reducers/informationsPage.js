import R from 'ramda'

import {
    FETCH_INFORMATIONS_SUCCESS,
    LOAD_MORE_INFORMATIONS_SUCCESS,
    SEARCH_INFORMATION,
    FILTER_INFORMATIONS_SUCCESS,
    FILTER_INFORMATIONS_FAILURE,
    CLEAR_FILTER
} from 'actionTypes'

const initialState = {
    ids: [],
    search: '',
    filterIds: [],
    filterActive: false
};

export default (state = initialState, {type, payload}) => {
    switch (type) {
        case FETCH_INFORMATIONS_SUCCESS:
            return R.merge(state, {
                ids: R.pluck('id', payload)
            });
        case LOAD_MORE_INFORMATIONS_SUCCESS:
            const ids = R.pluck('id', payload);
            return R.merge(state, {
                ids: R.concat(ids, state.ids)
            });

        case FILTER_INFORMATIONS_SUCCESS:
            console.log('FILTER_INFORMATIONS_SUCCESS');
            console.dir(payload);
            return R.merge(state, {
                filterIds: payload,
                filterActive: true
            });
        case FILTER_INFORMATIONS_FAILURE:
            console.log('FILTER_INFORMATIONS_FAILURE');
            console.dir(payload);
            return R.merge(state, {
                filterActive: false
            });
        case CLEAR_FILTER:
            console.log('CLEAR_FILTER');
            console.dir(payload);
            return R.merge(state, {
                filterActive: false
            });
        case SEARCH_INFORMATION:
            return R.merge(state, {
                search: payload
            });

        default:
            return state;
    }
}
